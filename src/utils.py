# -*- coding: utf-8 -*-
"""utils.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1pinFRdoCaOOkILvErWu3VJlnfpIhmuEP
"""

class STE(nn.Module):

    """
    Thresholds during the forward pass and acting as the identity function during the backward pass.
    """
    
    def __init__(self, tr=0.5):
        super(STE, self).__init__()
        self.tr = tr

    def forward(self, input):
        
        out = input.clone()
        out[out > self.tr] = 1
        out[out != 1] = 0

        return out

    def backward(self, input):

        return input


def Dilation(img, dil=1):
    bs = img.shape[0]
    img = img.detach().cpu().numpy()
    img_dil = np.zeros_like(img)

    for i in range(bs):
        img_dil[i,0] = binary_dilation(img[i,0],selem=star(dil))
    
    return torch.tensor(img_dil).to(device)